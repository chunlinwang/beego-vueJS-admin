{"version":3,"sources":["webpack:///./src/vendor/Export2Excel.js"],"names":["datenum","v","date1904","Date","parse","UTC","sheet_from_array_of_arrays","data","opts","ws","range","s","c","r","e","R","length","C","cell","cell_ref","XLSX","utils","encode_cell","t","z","SSF","_table","encode_range","Workbook","this","SheetNames","Sheets","s2ab","buf","ArrayBuffer","view","Uint8Array","i","charCodeAt","export_table_to_excel","id","oo","table","out","rows","querySelectorAll","ranges","outRow","columns","colspan","getAttribute","rowspan","cellValue","innerText","forEach","push","k","generateArray","document","getElementById","wb","wbout","write","bookType","bookSST","type","saveAs","Blob","export_json_to_excel","_ref","arguments","undefined","header","filename","_ref$autoWidth","autoWidth","_ref$bookType","unshift","colWidth","map","row","val","wch","toString","result","j","require"],"mappings":"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","file":"js/chunk-1b3a.3afce522.js","sourcesContent":["/* eslint-disable */\nrequire('script-loader!file-saver');\nimport XLSX from 'xlsx'\n\nfunction generateArray(table) {\n  var out = [];\n  var rows = table.querySelectorAll('tr');\n  var ranges = [];\n  for (var R = 0; R < rows.length; ++R) {\n    var outRow = [];\n    var row = rows[R];\n    var columns = row.querySelectorAll('td');\n    for (var C = 0; C < columns.length; ++C) {\n      var cell = columns[C];\n      var colspan = cell.getAttribute('colspan');\n      var rowspan = cell.getAttribute('rowspan');\n      var cellValue = cell.innerText;\n      if (cellValue !== \"\" && cellValue == +cellValue) cellValue = +cellValue;\n\n      //Skip ranges\n      ranges.forEach(function (range) {\n        if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\n          for (var i = 0; i <= range.e.c - range.s.c; ++i) outRow.push(null);\n        }\n      });\n\n      //Handle Row Span\n      if (rowspan || colspan) {\n        rowspan = rowspan || 1;\n        colspan = colspan || 1;\n        ranges.push({\n          s: {\n            r: R,\n            c: outRow.length\n          },\n          e: {\n            r: R + rowspan - 1,\n            c: outRow.length + colspan - 1\n          }\n        });\n      };\n\n      //Handle Value\n      outRow.push(cellValue !== \"\" ? cellValue : null);\n\n      //Handle Colspan\n      if (colspan)\n        for (var k = 0; k < colspan - 1; ++k) outRow.push(null);\n    }\n    out.push(outRow);\n  }\n  return [out, ranges];\n};\n\nfunction datenum(v, date1904) {\n  if (date1904) v += 1462;\n  var epoch = Date.parse(v);\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n}\n\nfunction sheet_from_array_of_arrays(data, opts) {\n  var ws = {};\n  var range = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n  for (var R = 0; R != data.length; ++R) {\n    for (var C = 0; C != data[R].length; ++C) {\n      if (range.s.r > R) range.s.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (range.e.c < C) range.e.c = C;\n      var cell = {\n        v: data[R][C]\n      };\n      if (cell.v == null) continue;\n      var cell_ref = XLSX.utils.encode_cell({\n        c: C,\n        r: R\n      });\n\n      if (typeof cell.v === 'number') cell.t = 'n';\n      else if (typeof cell.v === 'boolean') cell.t = 'b';\n      else if (cell.v instanceof Date) {\n        cell.t = 'n';\n        cell.z = XLSX.SSF._table[14];\n        cell.v = datenum(cell.v);\n      } else cell.t = 's';\n\n      ws[cell_ref] = cell;\n    }\n  }\n  if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);\n  return ws;\n}\n\nfunction Workbook() {\n  if (!(this instanceof Workbook)) return new Workbook();\n  this.SheetNames = [];\n  this.Sheets = {};\n}\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\n\nexport function export_table_to_excel(id) {\n  var theTable = document.getElementById(id);\n  var oo = generateArray(theTable);\n  var ranges = oo[1];\n\n  /* original data */\n  var data = oo[0];\n  var ws_name = \"SheetJS\";\n\n  var wb = new Workbook(),\n    ws = sheet_from_array_of_arrays(data);\n\n  /* add ranges to worksheet */\n  // ws['!cols'] = ['apple', 'banan'];\n  ws['!merges'] = ranges;\n\n  /* add worksheet to workbook */\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n\n  var wbout = XLSX.write(wb, {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  });\n\n  saveAs(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), \"test.xlsx\")\n}\n\nexport function export_json_to_excel({\n  header,\n  data,\n  filename,\n  autoWidth = true,\n  bookType=  'xlsx'\n} = {}) {\n  /* original data */\n  filename = filename || 'excel-list'\n  data = [...data]\n  data.unshift(header);\n  var ws_name = \"SheetJS\";\n  var wb = new Workbook(),\n    ws = sheet_from_array_of_arrays(data);\n\n  if (autoWidth) {\n    /*设置worksheet每列的最大宽度*/\n    const colWidth = data.map(row => row.map(val => {\n      /*先判断是否为null/undefined*/\n      if (val == null) {\n        return {\n          'wch': 10\n        };\n      }\n      /*再判断是否为中文*/\n      else if (val.toString().charCodeAt(0) > 255) {\n        return {\n          'wch': val.toString().length * 2\n        };\n      } else {\n        return {\n          'wch': val.toString().length\n        };\n      }\n    }))\n    /*以第一行为初始值*/\n    let result = colWidth[0];\n    for (let i = 1; i < colWidth.length; i++) {\n      for (let j = 0; j < colWidth[i].length; j++) {\n        if (result[j]['wch'] < colWidth[i][j]['wch']) {\n          result[j]['wch'] = colWidth[i][j]['wch'];\n        }\n      }\n    }\n    ws['!cols'] = result;\n  }\n\n  /* add worksheet to workbook */\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n\n  var wbout = XLSX.write(wb, {\n    bookType: bookType,\n    bookSST: false,\n    type: 'binary'\n  });\n  saveAs(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), `${filename}.${bookType}`);\n}\n"],"sourceRoot":""}